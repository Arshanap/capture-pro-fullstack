<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="utf-8">
        <title>Evara Dashboard</title>
        <meta http-equiv="x-ua-compatible" content="ie=edge">
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta property="og:title" content="">
        <meta property="og:type" content="">
        <meta property="og:url" content="">
        <meta property="og:image" content="">
        <!-- Favicon -->
        <link rel="shortcut icon" type="image/x-icon" href="/assets/imgs/theme/favicon.svg">
        <link rel="stylesheet" href="/assets/imgs/theme/favicon.svg">
        <!-- Template CSS -->
        <link href="/assets/css/main.css" rel="stylesheet" type="text/css" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    </head>
    <style>
        .success-message {
        background-color: #4CAF50;
        color: white;
        padding: 10px;
        margin-bottom: 20px;
        text-align: center;
        border-radius: 5px;
    }
    .error-message {
        background-color: #f44336;
        color: white;
        padding: 10px;
        margin-bottom: 20px;
        text-align: center;
        border-radius: 5px;
    }
         #listv{
            width: 60px;
        }
        #listu{
            width: 60px;
        }

        #newbtn{
            width: 70px;
        }
        #newbtn1{
            width: 70px;
        }
    </style>
    <body>
        <div class="screen-overlay"></div>
        <aside class="navbar-aside" id="offcanvas_aside">
            <div class="aside-top">
                <a href="" class="brand-wrap">
                    <img src="/assets/imgs/captureLogo.png" class="logo" alt="Evara Dashboard" >
                </a>
                <div>
                    <!-- <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button> -->
                </div>
            </div>
            <nav>
                <ul class="menu-aside">
                    <li class="menu-item">
                        <a class="menu-link" href="/admin/dashboard"> <i class="icon material-icons md-home"></i>
                            <span class="text">Dashboard</span>
                        </a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/products"> <i class="icon material-icons md-shopping_bag"></i>
                            <span class="text">Products</span>
                        </a>
                    
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/order"> <i class="icon material-icons md-shopping_cart"></i>
                            <span class="text">Order list</span>
                        </a>
      
                    </li>
                    <li class="menu-item ">
                         
                        <a href="/admin/users" class="menu-link" style="right: -10px; position: relative; color: #292f46;">   
                            <i class="icon material-icons md-person"></i>  users</a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/coupen"> <i class="icon material-icons md-add_box"></i>
                            <span class="text">Coupons</span>
                        </a>
                    </li>         
                   
                    <li class="menu-item active">
                        <a class="menu-link" href=""> <i class="icon material-icons md-monetization_on "></i>
                            <span class="text">Category</span>
                        </a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href=""> <i class="fas fa-bullhorn" style="font-size: 117%; color: #adadad; right:2%"></i>
                            <span class="text" style="left:7%; position:  relative;">banners</span>
                        </a>
                     
                    </li>
                   
                    <li class="menu-item">
                        <a class="menu-link" href=""> <i class="icon material-icons md-comment"></i>
                            <span class="text">Offers</span>
                        </a>
                    </li>
                    <li class="menu-item">
                        <a class="menu-link" href=""> <i class="icon material-icons md-stars"></i>
                            <span class="text">Payments</span> </a>
                    </li>
                  
                </ul>
                <hr>
                <ul class="menu-aside">
                    <li class="menu-item ">
                        <a class="menu-link" href=""> <i class="icon material-icons md-settings"></i>
                            <span class="text">Settings</span>
                        </a>
                        <!-- <div class="submenu">
                            <a href="page-settings-1.html">Setting sample 1</a>
                            <a href="page-settings-2.html">Setting sample 2</a>
                        </div> -->
                    </li>
                    <li class="menu-item">
                        <a  style="left: 5%; font-size: 10px;" class="menu-link" href="/admin/Logout"> <i class="fa-solid fa-right-from-bracket">  Logout </i> 
                         
                        </a >
                    </li>
                </ul>
                <br>
                <br>
            </nav>
        </aside>
        <main class="main-wrap">
            <header class="main-header navbar">
                <div class="col-search">
                    <!-- <form class="searchform">
                        <div class="input-group">
                            <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                            <button class="btn btn-light bg" type="button"> <i class="material-icons md-search"></i></button>
                        </div>
                    </form> -->
                </div>
                <div class="col-nav">
                    <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i class="material-icons md-apps"></i> </button>
                    <ul class="nav">
                        
                </div>
            </header>

            <section class="content-main">
                <div class="container mt-5">
                    <!-- <form action="/admin/category" method="get" class="mb-4">
                        <input type="text" name="search" placeholder="Search by name or email" value="<%= search || '' %>" />
                        <button type="submit" class="btn btn-primary">Search</button>
                    </form>  -->
                    <% if (errorMessage) { %>
                        <div id="error-message" class="error-message">
                            <p id="message-err"><%= errorMessage %></p>
                        </div>
                    <% } %>
                    
                    <% if (successMessage) { %>
                        <div id="success-message" class="success-message">
                            <p id="message"><%= successMessage %></p>
                        </div>
                    <% } %>
                    <div class="d-flex justify-content-between mb-4">
                        <h1 class="text-center">Category Management</h1>
                        
                        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                            <i class="fas fa-plus"></i> Add Category
                        </button>
                    </div>
            
                    <table class="table table-bordered table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>#</th>
                                <th>Category Name</th>
                                <th>Description</th>
                                <th>Status</th>
                                <!-- <th>Category Offer (%)</th> -->
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <%for(let i=0;i<data.length;i++){%>
                            <tr>
                                <td><%=i+1%></td>
                                <td><%=data[i].name%></td>
                                <td><%=data[i].description%></td>
                                <td><% if (data[i].isListed === true) { %>
                                    <span id="listv" class="badge bg-success">listed</span>
                                <% } else { %>
                                    <span id="listu" class="badge bg-danger">Unlisted</span>
                                <% } %></td>
                                <!-- <td><%=data[i].categoryOffer%>%</td> -->
                                <td>
                                    <a href="#" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#editCategoryModal" onclick="populateEditForm('<%=data[i]._id%>')">Edit</a>
                                    <% if (data[i].isListed === false) { %>
                                        <a href="/admin/listed?id=<%=data[i]._id%>" onclick="return funBlock(event, this.href)">
                                            <button style="margin-right: 25px;" id="newbtn" class="btn btn-sm btn-success">list</button>
                                        </a>
                                    <% } else { %>
                                        <a href="/admin/unlisted?id=<%=data[i]._id%>" onclick="return fununBlock(event, this.href)">
                                            <button style="margin-right: 25px;" id="newbtn1" class="btn btn-sm btn-danger">unlist</button>
                                        </a>
                                    <% } %>
                                    <% if(data[i].categoryOffer <= 0){ %>
                                        <a href="#" onclick="openCategoryOfferModal('<%= data[i]._id %>')">
                                            <button type="button" style="width: 60px;" class="btn-primary" data-bs-toggle="modal" data-bs-target="#categoryOfferModal">
                                                Offer
                                            </button>
                                        </a>
                                    <% }else{ %>
                                        <a href="#" onclick="openRemoveCategoryOfferModal('<%= data[i]._id %>')">
                                            <button type="button" style="width: 60px;" class="btn-danger" data-bs-toggle="modal" data-bs-target="#openCategoryOfferModal">
                                                Remove
                                            </button>
                                        </a>
                                    <% } %>
                                </td>
                            </tr>
                            <%}%>
                        </tbody>
                    </table>
                </div>


                <div class="modal fade" id="categoryOfferModal" tabindex="-1" aria-labelledby="categoryOfferModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="categoryOfferModalLabel">Add Category Offer</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <!-- Form for Adding Category Offer -->
                                <form id="categoryOfferForm">
                                    <div class="mb-3">
                                        <label for="categoryOffer" class="form-label">Offer Percentage</label>
                                        <input type="text" class="form-control" id="categoryOffer" />
                                    </div>
                                    <button type="submit" class="btn btn-success">Add Offer</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>



                <div class="container m-3">
                    <nav aria-label="page navigation">
                        <ul class="pagination justify-contet-center mb-20" style="margin-right: 200px;">
                            <%for(let i=1;i<totalPages;i++){%>
                                <li class="page-item <%=(i===currentPage) ? 'active' : ''%>">
                                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                </li>
                            <%}%>    
                        </ul>
                    </nav>
                </div>


                <!-- Modal -->
                <div class="modal fade" id="openCategoryOfferModal" tabindex="-1" aria-labelledby="categoryOfferModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="categoryOfferModalLabel">Remove Category Offer</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to remove the offer from this category?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-danger" id="removeOfferButton">Remove</button>
                            </div>
                        </div>
                    </div>
                </div>
  


            
                <!-- Add Category Modal -->
                <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div id="validationMessage1" style="color: red; margin-bottom: 1rem;"></div>
                            <form id="addCategoryForm">
                                <div id="validationMessages" style="display: none; color: red;"></div>
                                <div class="mb-3">
                                    <label for="categoryName" class="form-label">Category Name</label>
                                    <input type="text" name="name" class="form-control" id="categoryName">
                                </div>
                                <div class="mb-3">
                                    <label for="categoryDescription" class="form-label">Description</label>
                                    <textarea class="form-control" name="description" id="categoryDescription" rows="3"></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary">Add Category</button>
                            </form>

                            </div>
                        </div>
                    </div>
                </div>
            
                <!-- Edit Category Modal -->
                <div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div id="validationMessage" style="color: red; margin-bottom: 1rem;"></div>
                            <form id="editCategoryForm" action="/admin/editcategory" method="post">
                                <div id="editValidationMessages" style="display: none; color: red;"></div>
                                <div class="mb-3">
                                    <label for="editCategoryName" class="form-label">Category Name</label>
                                    <input type="text" name="name" class="form-control" id="editCategoryName">
                                </div>
                                <div class="mb-3">
                                    <label for="editCategoryDescription" class="form-label">Description</label>
                                    <textarea class="form-control" name="description" id="editCategoryDescription" rows="3"></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary">Save Changes</button>
                            </form>

                            
                            </div>
                        </div>
                    </div>
                </div>
            
                
            </section>
        </main>

        <script>
           let categoryOfferId; // Variable to store the category ID

// Function to open the modal and store the category ID
function openRemoveCategoryOfferModal(id) {
    categoryOfferId = id; // Store the category ID when the modal is opened
}

// Handle the offer removal when the "Remove" button is clicked
document.getElementById('removeOfferButton').addEventListener('click', function() {
    // Confirmation dialog before sending the removal request
    Swal.fire({
        title: "Are you sure?",
        text: "You want to remove the offer from this category!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, Remove the offer!"
    }).then((result) => {
        if (result.isConfirmed) {
            // Send the removal request to the server using Axios
            axios.delete(`/admin/removeCategoryOffer?id=${categoryOfferId}`)
                .then(response => {
                    if (response.data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Offer Removed',
                            text: 'The category offer has been removed successfully!'
                        });

                        // Close the modal on success
                        const modalElement = document.getElementById('openCategoryOfferModal');
                        const modal = bootstrap.Modal.getInstance(modalElement);
                        modal.hide();

                        // Reload the page after 2 seconds
                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.data.message || 'Something went wrong. Please try again.'
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.response?.data?.message || 'Failed to remove the offer. Please try again.'
                    });
                });
        }
    });
});

        
        </script>

        <script>
            let categoryId; // Variable to store the category ID
        
            function openCategoryOfferModal(id) {
                categoryId = id; // Store the category ID when the modal is opened
            }
        
            // Handle the form submission
            document.getElementById('categoryOfferForm').addEventListener('submit', function(event) {
                event.preventDefault(); // Prevent the default form submission
        
                // Get the offer input value and trim whitespace
                const offerP = document.getElementById('categoryOffer').value.trim();
        
                // Validation: Check if the input is a number greater than 0
                if (!offerP || isNaN(offerP) || Number(offerP) <= 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Input',
                        text: 'Please enter a valid number greater than 0 for the offer percentage.'
                    });
                    return;
                }
        
                // Confirmation dialog before sending the request
                Swal.fire({
                    title: "Are you sure?",
                    text: "You want to add this offer to the category!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, Add the offer!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Send the data to the server using Axios
                        axios.post(`/admin/addCategoryOffer?id=${categoryId}`, { offerP })
                            .then(response => {
                                if (response.data.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Offer Added',
                                        text: 'Your category offer has been added successfully!'
                                    });
        
                                    // Close the modal on success
                                    const modalElement = document.getElementById('categoryOfferModal');
                                    const modal = bootstrap.Modal.getInstance(modalElement);
                                    modal.hide();
        
                                    // Reload the page after 2 seconds
                                    setTimeout(() => {
                                        window.location.reload();
                                    }, 2000);
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: response.data.message || 'Something went wrong. Please try again.'
                                    });
                                }
                            })
                            .catch(error => {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: error.response?.data?.message || 'Failed to add the offer. Please try again.'
                                });
                            });
                    }
                });
            });
        </script>

        <script>
    document.getElementById('addCategoryForm').addEventListener('submit', async function(event) {
        event.preventDefault(); 

        const validationDiv = document.getElementById('validationMessages');
        validationDiv.style.display = 'none';

        if (!validateAddForm()) {
            return;
        }

        const name = document.getElementById('categoryName').value.trim();
        const description = document.getElementById('categoryDescription').value.trim();

        try {
            const response = await axios.post('/admin/addcategory', {
                name: name,
                description: description
            });

            validationDiv.style.display = 'block';
            if (response.data.success) {
                validationDiv.style.color = 'green';
                validationDiv.innerText = "Category added successfully!";
            } else {
                validationDiv.style.color = 'red';
                validationDiv.innerText = response.data.message || "An error occurred while adding the category.";
            }
        } catch (error) {
            console.error('Error:', error);
            validationDiv.style.display = 'block';
            validationDiv.style.color = 'red';
            validationDiv.innerText = "Failed to add category. Please try again.";
        }
    });
</script>


<script>
    function showValidationMessage(message, elementId) {
        const validationDiv = document.getElementById(elementId);
        validationDiv.innerText = message;
        validationDiv.style.display = message ? 'block' : 'none'; 
    }

    function validateAddForm() {
        const name = document.getElementById('categoryName').value.trim();
        const description = document.getElementById('categoryDescription').value.trim();

        showValidationMessage('', 'validationMessage1');

        if (name === "") {
            showValidationMessage("Category name is required.", 'validationMessage1');
            return false;
        } else if (name.length < 3 || name.length > 50) {
            showValidationMessage("Category name must be between 3 and 50 characters.", 'validationMessage1');
            return false;
        } else if (!/^[A-Za-z0-9\s]+$/.test(name)) {
            showValidationMessage("Category name can only contain letters, numbers, and spaces.", 'validationMessage1');
            return false;
        }

        if (description === "") {
            showValidationMessage("Category description is required.", 'validationMessage1');
            return false;
        } else if (description.length < 10 || description.length > 200) {
            showValidationMessage("Category description must be between 10 and 200 characters.", 'validationMessage1');
            return false;
        }

        return true;
    }

    function validateEditForm() {
        const name = document.getElementById('editCategoryName').value.trim();
        const description = document.getElementById('editCategoryDescription').value.trim();

        showValidationMessage('', 'editValidationMessages');

        if (name === "") {
            showValidationMessage("Category name is required.", 'editValidationMessages');
            return false;
        } else if (name.length < 3 || name.length > 50) {
            showValidationMessage("Category name must be between 3 and 50 characters.", 'editValidationMessages');
            return false;
        } else if (!/^[A-Za-z0-9\s]+$/.test(name)) {
            showValidationMessage("Category name can only contain letters, numbers, and spaces.", 'editValidationMessages');
            return false;
        }

        if (description === "") {
            showValidationMessage("Category description is required.", 'editValidationMessages');
            return false;
        } else if (description.length < 10 || description.length > 200) {
            showValidationMessage("Category description must be between 10 and 200 characters.", 'editValidationMessages');
            return false;
        }

        return true;
    }
</script>

            

<script>
   document.addEventListener("DOMContentLoaded", () => {
        // Set timeout to hide messages after 3 seconds (3000 milliseconds)
        setTimeout(() => {
            const successMessage = document.getElementById('success-message');
            const errorMessage = document.getElementById('error-message');
            const idsuss = document.getElementById("message");
            const errmessage = document.getElementById("message-err");

            if (idsuss && idsuss.textContent !== '') {
                successMessage.style.transition = "opacity 0.5s ease"; // Optional fade effect
                successMessage.style.opacity = "0"; // Hide message with fade
                idsuss.textContent = '';
                setTimeout(() => successMessage.style.display = "none", 500); // Remove from view
            }

            if (errmessage && errmessage.textContent !== '') {
                errorMessage.style.transition = "opacity 0.5s ease"; // Optional fade effect
                errorMessage.style.opacity = "0"; // Hide message with fade
                errmessage.textContent = '';
                setTimeout(() => errorMessage.style.display = "none", 500); // Remove from view
            }
        }, 3000); // 3000 milliseconds = 3 seconds
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
function funBlock(event, url) {
    event.preventDefault(); // Prevent the default link action

    Swal.fire({
        title: "Are you sure?",
        text: "You unBlock this Category!",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, unBlock it!"
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire({
            title: "unBlocked!",
            text: "This Category has been unBlocked.",
            icon: "success",
            timer: 1500, 
            showConfirmButton: false
        }).then(() => {
            // Redirect after success message is shown
            window.location.href = url;
        });
        }
    });
}

function fununBlock(event, url) {
    event.preventDefault(); // Prevent the default link action

    Swal.fire({
        title: "Are you sure?",
        text: "You Block this Category!",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, Block it!"
    }).then((result) => {
        Swal.fire({
                title: "Blocked!",
                text: "This Category has been Blocked.",
                icon: "success",
                timer: 1500, 
                showConfirmButton: false
            }).then(() => {
                // Redirect after success message is shown
                window.location.href = url;
            });
    });
}

</script>
            

<script>
    function populateEditForm(categoryId) {
        
        fetch(`/admin/getCategoryById?id=${categoryId}`)
            .then(response => response.json())
            .then(data => {
                
                document.getElementById('editCategoryName').value = data.name;
                document.getElementById('editCategoryDescription').value = data.description;
                // document.getElementById('editCategoryStatus').value = data.isListed ? "true" : "false";
                // document.getElementById('editCategoryOffer').value = data.categoryOffer;

                
                document.getElementById('editCategoryForm').action = `/admin/editcategory?id=${categoryId}`;
            })
            .catch(error => console.log('Error fetching category data:', error));
    }
</script>

              





    <!-- <script src="assets/js/vendors/jquery-3.6.0.min.js"></script> -->
     <script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
    
    <!-- <script src="assets/js/vendors/bootstrap.bundle.min.js"></script> -->
     <script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <!-- <script src="assets/js/vendors/select2.min.js"></script> -->
     <script src="/assets/js/vendors/select2.min.js"></script>
    <!-- <script src="assets/js/vendors/perfect-scrollbar.js"></script> -->
     <script src="/assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="/assets/js/vendors/chart.js"></script>
    <!-- Main Script -->
    <script src="/assets/js/main.js" type="text/javascript"></script>
    <script src="/assets/js/custom-chart.js" type="text/javascript"></script>

   
</body>
</html>