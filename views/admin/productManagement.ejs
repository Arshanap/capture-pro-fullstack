<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="utf-8">
        <title>Evara Dashboard</title>
        <meta http-equiv="x-ua-compatible" content="ie=edge">
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta property="og:title" content="">
        <meta property="og:type" content="">
        <meta property="og:url" content="">
        <meta property="og:image" content="">
        <!-- Favicon -->
        <link rel="shortcut icon" type="image/x-icon" href="/assets/imgs/theme/favicon.svg">
        <link rel="stylesheet" href="/assets/imgs/theme/favicon.svg">
        <!-- Template CSS -->
        <link href="/assets/css/main.css" rel="stylesheet" type="text/css" />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    </head>
    <style>
        #listv{
            width: 60px;
        }
        #listu{
            width: 60px;
        }

        #newbtn{
            width: 70px;
        }
        #newbtn1{
            width: 70px;
        }
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }
        .thumbnail {
            margin-right: 10px;


        }
        .success-message {
        background-color: #4CAF50;
        color: white;
        padding: 10px;
        margin-bottom: 20px;
        text-align: center;
        border-radius: 5px;
    }
    .error1-message {
        background-color: #f44336;
        color: white;
        padding: 10px;
        margin-bottom: 20px;
        text-align: center;
        border-radius: 5px;
    }
    </style>
    
    <body>
        <div class="screen-overlay"></div>
        <aside class="navbar-aside" id="offcanvas_aside">
            <div class="aside-top">
                <a href="" class="brand-wrap">
                    <img src="/assets/imgs/captureLogo.png" class="logo" alt="Evara Dashboard" >
                </a>
                <div>
                    <!-- <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button> -->
                </div>
            </div>
            <nav>
                <ul class="menu-aside">
                    <li class="menu-item">
                        <a class="menu-link" href="/admin/dashboard"> <i class="icon material-icons md-home"></i>
                            <span class="text">Dashboard</span>
                        </a>
                    </li>
                    <li class="menu-item active">
                        <a class="menu-link" href=""> <i class="icon material-icons md-shopping_bag"></i>
                            <span class="text">Products</span>
                        </a>
                    
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/order"> <i class="icon material-icons md-shopping_cart"></i>
                            <span class="text">Order list</span>
                        </a>
      
                    </li>
                    <li class="menu-item ">
                         
                        <a href="/admin/users" class="menu-link" style="right: -10px; position: relative; color: #292f46;">   
                            <i class="icon material-icons md-person"></i>  users</a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href=""> <i class="icon material-icons md-add_box"></i>
                            <span class="text">Coupons</span>
                        </a>
                    </li>
                    <li class="menu-item active"></li>
                        <a class="menu-link" href="/admin/category"> 
                            <i class="icon material-icons md-monetization_on "></i>
                            <span class="text">Category</span>
                        </a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href=""> <i class="fas fa-bullhorn" style="font-size: 117%; color: #adadad; right:2%"></i>
                            <span class="text" style="left:7%; position:  relative;">banners</span>
                        </a>
                     
                    </li>
                   
                    <li class="menu-item">
                        <a class="menu-link" href=""> <i class="icon material-icons md-comment"></i>
                            <span class="text">Offers</span>
                        </a>
                    </li>
                    <li class="menu-item">
                        <a class="menu-link" href=""> <i class="icon material-icons md-stars"></i>
                            <span class="text">Payments</span> </a>
                    </li>
                  
                </ul>
                <hr>
                <ul class="menu-aside">
                    <li class="menu-item ">
                        <a class="menu-link" href=""> <i class="icon material-icons md-settings"></i>
                            <span class="text">Settings</span>
                        </a>
                    </li>
                    <li class="menu-item">
                        <a  style="left: 5%; font-size: 10px;" class="menu-link" href="/admin/Logout"> <i class="fa-solid fa-right-from-bracket">  Logout </i> 
                         
                        </a >
                    </li>
                </ul>
                <br>
                <br>
            </nav>
        </aside>
        <main class="main-wrap">
            <header class="main-header navbar">
                <div class="col-search">
                    
                </div>
                <div class="col-nav">
                    <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i class="material-icons md-apps"></i> </button>
                    <ul class="nav">
                        
                </div>
            </header>

            <form action="/admin/products" method="get" class="mb-4">
                <input type="text" name="search" placeholder="Search by name or email" value="" />
                <button type="submit" class="btn btn-primary">Search</button>
             </form>
             <% if (successMessage) { %>
                <div id="success-message" class="success-message">
                    <p id="message"><%= successMessage %></p>
                </div>
            <% } %>
            <% if (errorMessage) { %>
                <div id="error1-message" class="error-message">
                    <p id="message-err"><%= errorMessage %></p>
                </div>
            <% } %>

            <section class="content-main">
               
                <div class="container mt-5">
                    <!-- Page Heading -->
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h1 class="h3">Product Management</h1>
                        <!-- Add Product Button -->
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">Add New Product</button>
                    </div>
            
                    <!-- Product List -->
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped">
                            <thead class="table-dark">
                                <tr>
                                    <th>#</th>
                                    <th scope="col">Product Name</th>
                                    <th scope="col">Category</th>
                                    <th scope="col">Regular Price</th>
                                    <th scope="col">Sale Price</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Status</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody id="productTableBody">
                                <%for(let i=0;i<prodata.length;i++){%>
                                <tr>
                                    <td><%=i+1%></td>
                                    <td><%=prodata[i].productName%></td>
                                    <td><%= prodata[i].category.name %></td>
                                    <td><%= prodata[i].regularPrice.toLocaleString() %></td>
                                    <td><%= prodata[i].salePrice.toLocaleString() %></td>
                                    <td><%= prodata[i].count %></td>
                                    <td><% if (prodata[i].isBlocked === true) { %>
                                        <span id="listv" class="badge bg-success">listed</span>
                                    <% } else { %>
                                        <span id="listu" class="badge bg-danger">Unlisted</span>
                                    <% } %></td>
                                        <td>
                                            <a href="/admin/productedit?id=<%=prodata[i]._id%>" class="btn btn-sm btn-primary">Edit</a>
                                            <% if (prodata[i].isBlocked === true) { %>
                                                <a href="/admin/unlistProduct?id=<%=prodata[i]._id%>" onclick="return unList(event, this.href)">
                                                    <button style="margin-right: 10px;" id="newbtn1" class="btn btn-sm btn-danger">Unlist</button>
                                                </a>
                                            <% } else { %>
                                                <a href="/admin/listProduct?id=<%=prodata[i]._id%>" onclick="return List(event, this.href)">
                                                    <button style="margin-right: 10px;" id="newbtn" class="btn btn-sm btn-success">List</button>
                                                </a>
                                            <% } %>
                                        </td>
                                        
                                </tr>
                                <%}%>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="container m-3">
                    <nav aria-label="page navigation">
                        <ul class="pagination justify-contet-center mb-20" style="margin-right: 200px;">
                            <%for(let i=1;i<totalPages;i++){%>
                                <li class="page-item <%=(i===currentPage) ? 'active' : ''%>">
                                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                </li>
                            <%}%>    
                        </ul>
                    </nav>
                </div>
            
                <!-- Add Product Modal -->
                <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="addProductForm" method="post" action="/admin/addproduct" enctype="multipart/form-data" onsubmit="return validateForm()">
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="productName" class="form-label">Product Name</label>
                                            <input type="text" class="form-control" id="pproductName" name="productName">
                                            <div id="productName-error" class="error-message text-danger"></div>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="productCategory" class="form-label">Category</label>
                                            <select class="form-control" id="productCategory" name="category">
                                                <% for(let i = 0; i < categories.length; i++) { %>
                                                    <option value="<%= categories[i].name %>"><%= categories[i].name %></option>
                                                <% } %>
                                            </select>
                                            <div id="productCategory-error" class="error-message text-danger"></div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="productPrice" class="form-label">Regular Price</label>
                                            <input type="number" class="form-control" id="pproductPrice" name="regularPrice" min="0">
                                            <div id="regularPrice-error" class="error-message text-danger"></div>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="salePrice" class="form-label">Sale Price</label>
                                            <input type="number" class="form-control" id="psalePrice" name="salePrice" min="0">
                                            <div id="salePrice-error" class="error-message text-danger"></div>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="productDescription" class="form-label">Full Description</label>
                                        <textarea class="form-control" id="productDescription" name="description" rows="4"></textarea>
                                        <div id="description-error" class="error-message text-danger"></div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <label for="editProductVariant" class="form-label">Quantity</label>
                                            <input type="text" class="form-control" id="editProductVariant" name="count" placeholder="Enter the quantity">
                                            <div id="quantity-error" class="error-message text-danger"></div>
                                        </div>
                                    </div>
                                    <!-- Image inputs with save buttons -->
                                <div class="row">
                                        <!-- Image 1 -->
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="product image1" id="imgView1" style="max-width: 200px;">
                                            <input class="form-control" type="file" name="images" id="input1" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)">
                                            <div id="images1-error" class="error-message text-danger"></div>
                                        </div>
                                        <div id="cropperContainer1" class="image-cropper d-flex align-items-center"
                                             style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img src="" id="croppedImg1" alt="">
                                            <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                        </div>
                                   
                                    
                                    <div class="row">
                                        <!-- Image 2 -->
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="" id="imgView2" style="max-width: 200px;">
                                            <input class="form-control" type="file" name="images" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)">
                                        </div>
                                        <div id="cropperContainer2" class="image-cropper d-flex align-items-center"
                                             style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img src="" id="croppedImg2" alt="">
                                            <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <!-- Image 2 -->
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="" id="imgView3" style="max-width: 200px;">
                                            <input class="form-control" type="file" name="images" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)">
                                        </div>
                                        <div id="cropperContainer3" class="image-cropper d-flex align-items-center"
                                             style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img src="" id="croppedImg3" alt="">
                                            <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <!-- Image 2 -->
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="" id="imgView4" style="max-width: 200px;">
                                            <input class="form-control" type="file" name="images" id="input4" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 4)">
                                        </div>
                                        <div id="cropperContainer4" class="image-cropper d-flex align-items-center"
                                             style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img src="" id="croppedImg4" alt="">
                                            <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                        </div>
                                    </div>
                                </div>    
                                    
                                    <div class="text-end mt-3">
                                        <button type="submit" class="btn btn-primary">Add Product</button>
                                    </div>
                                </form>
                                                           
                                
                            </div>
                        </div>
                    </div>
                </div>
            
                  
                <!-- edit -->
                <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

                
<script>
    let croppers = {};

    function viewImage(event, index) {
        let input = event.target;
        let reader = new FileReader();
        reader.onload = function () {
            let dataURL = reader.result;
            let image = document.getElementById('imgView' + index);
            image.src = dataURL;

            // If a cropper exists for this index, destroy it first
            if (croppers[index]) {
                croppers[index].destroy();
            }

            // Initialize Cropper.js
            croppers[index] = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 1,
                background: false,
                autoCropArea: 1,
                zoomable: true,
            });

            // Display cropping container
            document.getElementById('cropperContainer' + index).style.display = 'block';

            // Handle the save button click for cropping
            let saveButton = document.querySelector('#saveButton' + index);
            saveButton.addEventListener('click', async function () {
                let croppedCanvas = croppers[index].getCroppedCanvas();
                let croppedImage = document.getElementById('croppedImg' + index);
                croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

                let timestamp = new Date().getTime();
                let fileName = `cropped-img-${timestamp}-${index}.png`;

                // Convert the cropped canvas to a Blob and replace the original file
                await croppedCanvas.toBlob(blob => {
                    let imgFile = new File([blob], fileName, { type: blob.type });
                    let fileList = new DataTransfer();
                    fileList.items.add(imgFile);
                    document.getElementById('input' + index).files = fileList.files;
                });

                // Destroy the cropper after saving
                croppers[index].destroy();
                croppers[index] = null;
            });
        };
        reader.readAsDataURL(input.files[0]);
    }
</script>
<script>
    // Set timeout to hide messages after 3 seconds (3000 milliseconds)
    setTimeout(() => {
        const successMessage = document.getElementById('success-message');
        const errorMessage = document.getElementById('error-message');
        const idsuss= document.getElementById("message");
        const errmessage = document.getElementById("message-err")
        
        if (idsuss.textContent!=='') {
            successMessage.style.transition = "opacity 0.5s ease"; // Optional fade effect
            successMessage.style.opacity = "0"; // Hide message with fade
            idsuss.textContent=''
            setTimeout(() => successMessage.style.display = "none", 500); // Remove from view
        }
 
        if (errmessage.textContent!=='') {
            errorMessage.style.transition = "opacity 0.5s ease"; // Optional fade effect
            errorMessage.style.opacity = "0"; // Hide message with fade
            errmessage.textContent=''
            setTimeout(() => errorMessage.style.display = "none", 500); // Remove from view
        }
    }, 3000); // 3000 milliseconds = 3 seconds
</script>
<script>
    function validateForm() {
    let isValid = true;

    // Function to check for special characters
    const hasSpecialCharacters = (input) => /[!@#$%^&*(),.?":{}|<>]/g.test(input);

    // Product Name Validation
    const productName = document.getElementById('productName').value.trim();
    if (productName === '' || hasSpecialCharacters(productName)) {
        document.getElementById('productName-error').innerText = 'Product name is required and cannot contain special characters.';
        isValid = false;
    } else {
        document.getElementById('productName-error').innerText = '';
    }

    // Category Validation
    const productCategory = document.getElementById('productCategory').value;
    if (productCategory === '') {
        document.getElementById('productCategory-error').innerText = 'Category is required.';
        isValid = false;
    } else {
        document.getElementById('productCategory-error').innerText = '';
    }

    // Regular Price Validation
    const regularPrice = document.getElementById('regularPrice').value.trim();
    if (regularPrice === '' || parseFloat(regularPrice) <= 0) {
        document.getElementById('regularPrice-error').innerText = 'Regular price is required and must be greater than 0.';
        isValid = false;
    } else {
        document.getElementById('regularPrice-error').innerText = '';
    }

    // Sale Price Validation
    const salePrice = document.getElementById('salePrice').value.trim();
    if (salePrice === '' || parseFloat(salePrice) <= 0) {
        document.getElementById('salePrice-error').innerText = 'Sale price is required and must be greater than 0.';
        isValid = false;
    } else if (parseFloat(salePrice) >= parseFloat(regularPrice)) {
        document.getElementById('salePrice-error').innerText = 'Sale price must be less than regular price.';
        isValid = false;
    } else {
        document.getElementById('salePrice-error').innerText = '';
    }

    // Quantity Validation
    const quantity = document.getElementById('count').value.trim();
    if (quantity === '' || isNaN(quantity) || parseInt(quantity) <= 0) {
        document.getElementById('quantity-error').innerText = 'Please enter a valid quantity greater than 0.';
        isValid = false;
    } else {
        document.getElementById('quantity-error').innerText = '';
    }

    // Full Description Validation
    const productDescription = document.getElementById('description').value.trim();
    if (productDescription === '' || hasSpecialCharacters(productDescription)) {
        document.getElementById('description-error').innerText = 'Description is required and cannot contain special characters.';
        isValid = false;
    } else {
        document.getElementById('description-error').innerText = '';
    }

    // Image Validation
    const imageInputs = [document.getElementById('input1')]; // Add other inputs as needed
    for (let i = 0; i < imageInputs.length; i++) {
        const file = imageInputs[i]?.files[0];
        if (file && !['image/png', 'image/jpeg', 'image/jpg'].includes(file.type)) {
            document.getElementById(`images${i + 1}-error`).innerText = 'Only PNG, JPEG, and JPG formats are allowed.';
            isValid = false;
        } else {
            document.getElementById(`images${i + 1}-error`).innerText = '';
        }
    }

    return isValid;
}


</script>

<script>
    function List(event, url) {
    event.preventDefault(); 

    Swal.fire({
        title: "Are you sure?",
        text: "You List this Product!",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, List it!"
    }).then((result) => {
        if (result.isConfirmed) {
            // Show success message and then redirect
            Swal.fire({
                title: "Listed!",
                text: "This Product has been Listed.",
                icon: "success",
                timer: 1500, 
                showConfirmButton: false
            }).then(() => {
                // Redirect after success message is shown
                window.location.href = url;
            });
        }
    });
}


    function unList(event, url) {
    event.preventDefault(); 

    Swal.fire({
        title: "Are you sure?",
        text: "You unList this Product!",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, unList it!"
    }).then((result) => {
        if (result.isConfirmed) {
            // Show success message and then redirect
            Swal.fire({
                title: "UnListed!",
                text: "This Product has been UnListed.",
                icon: "success",
                timer: 1500, // Display success message for 1.5 seconds
                showConfirmButton: false
            }).then(() => {
                // Redirect after success message is shown
                window.location.href = url;
            });
        }
    });
}

</script>

<script>
    function populateEditProductForm(productId) {
    $.ajax({
        url: '/admin/getProductData',  // Make sure you have a route to get the product data
        method: 'GET',
        data: { id: productId },
        success: function(product) {
            // Populate the form fields inside the modal with the product data
            $('#productName').val(product.productName);
            $('#productCategory').val(product.category._id);
            $('#regularPrice').val(product.regularPrice);
            $('#salePrice').val(product.salePrice);
            $('#description').val(product.description);
            $('#count').val(product.count);
            
            // Assuming the product has multiple images, you can dynamically show them
            // or handle image uploads in a similar manner if needed.
        },
        error: function(err) {
            console.error('Error fetching product data:', err);
            alert('Failed to load product data.');
        }
    });
}






function viewImage1(event) {
           document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage2(event) {
           document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage3(event) {
           document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage4(event) {
           document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
       }




       function viewImage(event, index) {
           let input = event.target;
           let reader = new FileReader();
           reader.onload = function () {
               let dataURL = reader.result;
               let image = document.getElementById('imgView' + index);
               image.src = dataURL;
               let cropper = new Cropper(image, {
                   aspectRatio: 1,
                   viewMode: 1,
                   guides: true,
                   background: false,
                   autoCropArea: 1,
                   zoomable: true
               });
               let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
               cropperContainer.style.display = 'block';
               let saveButton = document.querySelector('#saveButton' + index);
               saveButton.addEventListener('click', async function () {
                   let croppedCanvas = cropper.getCroppedCanvas();
                   let croppedImage = document.getElementById("croppedImg" + index);
                   croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                   let timestamp = new Date().getTime();
                   let fileName = `cropped-img-${timestamp}-${index}.png`;
                   await croppedCanvas.toBlob(blob => {
                       let input = document.getElementById('input' + index);
                       let imgFile = new File([blob], fileName, blob)
                       const fileList = new DataTransfer();
                       fileList.items.add(imgFile);
                       input.files = fileList.files
                   });
                   cropperContainer.style.display = 'none';
               });
           };
           reader.readAsDataURL(input.files[0]);
       }


       const selectedImages = [];
   document.getElementById("imageInput").addEventListener("change", handleFileSelect);


       function handleFileSelect(event) {
           const addedImagesContainer = document.getElementById("addedImagesContainer");
           addedImagesContainer.innerHTML = "";
           const files = event.target.files;
           for (let i = 0; i < files.length; i++) {
               const file = files[i];
               selectedImages.push(file);
               const thumbnail = document.createElement("div");
               thumbnail.classList.add("thumbnail");
               const img = document.createElement("img");
               img.src = URL.createObjectURL(file);
               img.alt = "thumbnail";
               img.style.width = "50px";
               img.style.height = "auto";
               const removeIcon = document.createElement("span");
               removeIcon.classList.add("remove-icon");
               removeIcon.innerHTML = "&times;";
               removeIcon.addEventListener("click", function () {
                   const index = selectedImages.indexOf(file);
                   if (index !== -1) {
                       selectedImages.splice(index, 1);
                   }
                   thumbnail.remove();
               });
               thumbnail.appendChild(img);
               thumbnail.appendChild(removeIcon);
               addedImagesContainer.appendChild(thumbnail);
           }
       };

</script>

     
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <!-- <script src="assets/js/vendors/jquery-3.6.0.min.js"></script> -->
     <script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
    
    <!-- <script src="assets/js/vendors/bootstrap.bundle.min.js"></script> -->
     <script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <!-- <script src="assets/js/vendors/select2.min.js"></script> -->
     <script src="/assets/js/vendors/select2.min.js"></script>
    <!-- <script src="assets/js/vendors/perfect-scrollbar.js"></script> -->
     <script src="/assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="/assets/js/vendors/chart.js"></script>
    <!-- Main Script -->
    <script src="/assets/js/main.js" type="text/javascript"></script>
    <script src="/assets/js/custom-chart.js" type="text/javascript"></script>

   
</body>
</html>