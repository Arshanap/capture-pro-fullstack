<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="utf-8">
        <title>Evara Dashboard</title>
        <meta http-equiv="x-ua-compatible" content="ie=edge">
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta property="og:title" content="">
        <meta property="og:type" content="">
        <meta property="og:url" content="">
        <meta property="og:image" content="">
        <!-- Favicon -->
        <link rel="shortcut icon" type="image/x-icon" href="/assets/imgs/theme/favicon.svg">
        <link rel="stylesheet" href="/assets/imgs/theme/favicon.svg">
        <!-- Template CSS -->
        <link href="/assets/css/main.css" rel="stylesheet" type="text/css" />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
        <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
    </head>
    <style>
        .image-cropper {
            position: relative;
            width: 300px;
            height: 200px;
            margin-bottom: 20px;
            display: none;
        }
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }


        .thumbnail {
            margin-right: 10px;


        }
        
    </style>
    
    <body>
        <div class="screen-overlay"></div>
        <aside class="navbar-aside" id="offcanvas_aside">
            <div class="aside-top">
                <a href="" class="brand-wrap">
                    <img src="/assets/imgs/captureLogo.png" class="logo" alt="Evara Dashboard" >
                </a>
                <div>
                    <!-- <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button> -->
                </div>
            </div>
            <nav>
                <ul class="menu-aside">
                    <li class="menu-item">
                        <a class="menu-link" href="/admin/dashboard"> <i class="icon material-icons md-home"></i>
                            <span class="text">Dashboard</span>
                        </a>
                    </li>
                    <li class="menu-item active">
                        <a class="menu-link" href=""> <i class="icon material-icons md-shopping_bag"></i>
                            <span class="text">Products</span>
                        </a>
                    
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/order"> <i class="icon material-icons md-shopping_cart"></i>
                            <span class="text">Order list</span>
                        </a>
      
                    </li>
                    <li class="menu-item ">
                         
                        <a href="/admin/users" class="menu-link" style="right: -10px; position: relative; color: #292f46;">   
                            <i class="icon material-icons md-person"></i>  users</a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/coupen"> <i class="icon material-icons md-add_box"></i>
                            <span class="text">Coupons</span>
                        </a>
                    </li>
                    <li class="menu-item active"></li>
                        <a class="menu-link" href="/admin/category"> 
                            <i class="icon material-icons md-monetization_on "></i>
                            <span class="text">Category</span>
                        </a>
                    </li>
                    <li class="menu-item ">
                        <a class="menu-link" href=""> <i class="fas fa-bullhorn" style="font-size: 117%; color: #adadad; right:2%"></i>
                            <span class="text" style="left:7%; position:  relative;">banners</span>
                        </a>
                     
                    </li>
                   
                    <li class="menu-item">
                        <a class="menu-link" href=""> <i class="icon material-icons md-comment"></i>
                            <span class="text">Offers</span>
                        </a>
                    </li>
                    <li class="menu-item">
                        <a class="menu-link" href=""> <i class="icon material-icons md-stars"></i>
                            <span class="text">Payments</span> </a>
                    </li>
                  
                </ul>
                <hr>
                <ul class="menu-aside">
                    <li class="menu-item ">
                        <a class="menu-link" href=""> <i class="icon material-icons md-settings"></i>
                            <span class="text">Settings</span>
                        </a>
                    </li>
                    <li class="menu-item">
                        <a  style="left: 5%; font-size: 10px;" class="menu-link" href="/admin/Logout"> <i class="fa-solid fa-right-from-bracket">  Logout </i> 
                         
                        </a >
                    </li>
                </ul>
                <br>
                <br>
            </nav>
        </aside>
        <main class="main-wrap">
            <header class="main-header navbar">
                <div class="col-search">
                    
                </div>
                <!-- <div class="col-nav">
                    <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i class="material-icons md-apps"></i> </button>
                    <ul class="nav">
                        
                </div> -->
            </header>
            
                <!-- Edit Product Modal -->
                <!-- <div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true"> -->
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <form id="editProductForm" method="post" action="/admin/productedit?id=<%= product._id %>" enctype="multipart/form-data" onclick="return validateForm()">
                            <div class="modal-header">
                                <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                                <a href="/admin/products"><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></a>
                            </div>
                        
                            <div class="modal-body">
                                <!-- Form fields populated by JavaScript -->
                                <div class="mb-3">
                                    <label for="productName" class="form-label">Product Name</label>
                                    <input type="text" value="<%= product?.productName || '' %>" class="form-control" id="productName" name="productName">
                                    <div id="productName-error" class="error-message text-danger"></div>
                                </div>
                        
                                <div class="mb-3">
                                    <label for="productCategory" class="form-label">Category</label>
                                    <select class="form-control" id="productCategory" name="category">
                                        <% categories.forEach(function(category) { %>
                                            <option value="<%= category._id %>" <%= product?.category?._id.toString() === category._id.toString() ? 'selected' : '' %>> <%= category.name %> </option>
                                        <% }) %>
                                    </select>
                                    <div id="productCategory-error" class="error-message text-danger"></div>
                                </div>
                        
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="regularPrice" class="form-label">Regular Price</label>
                                        <input type="number" value="<%= product?.regularPrice || '' %>" class="form-control" id="regularPrice" name="regularPrice">
                                        <div id="regularPrice-error" class="error-message text-danger"></div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="salePrice" class="form-label">Sale Price</label>
                                        <input type="number" value="<%= product?.salePrice || '' %>" class="form-control" id="salePrice" name="salePrice">
                                        <div id="salePrice-error" class="error-message text-danger"></div>
                                    </div>
                                </div>
                        
                                <div class="mb-3">
                                    <label for="description" class="form-label">Full Description</label>
                                    <textarea class="form-control" id="description" name="description" rows="4"><%= product?.description || '' %></textarea>
                                    <div id="description-error" class="error-message text-danger"></div>
                                </div>
                        
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="count" class="form-label">Quantity</label>
                                        <input type="number" class="form-control" value="<%= product?.count || '' %>" id="count" name="count">
                                        <div id="quantity-error" class="error-message text-danger"></div>
                                    </div>
                                </div>
                        
                                <!-- Image Upload and Cropping-->
                                <div class="row" id="imageRow">
                                    <% if (product?.productImage && product.productImage.length > 0) { %>
                                        <% product.productImage.forEach(function(image, i) { %>
                                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                <i onclick="deleteSingleImage('<%=product.productImage[i]%>','<%=product._id%>')" style="position: absolute; margin-left: .5rem; cursor: pointer;" class="fa-thin fa-x"></i>
                                                <img src="/uploads/re-image/<%= image %>" alt="product image <%= i %>" id="imgView<%= i %>" style="max-width: 200px;">
                                                <input class="form-control" type="file" name="images" id="input<%= i %>" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, '<%= i %>')"> 
                                                <button type="button" id="saveButton<%= i %>" class="btn-sm btn-primary">Save</button>                                   
                                            </div>
                                        <% }) %>
                                    <% } else { %>
                                        <p>No product images available.</p>
                                    <% } %>
                                </div>
                            </div>
                        
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary" id="saveChangesBtn">Save changes</button>
                            </div>
                        </form>
                        
                          
                      </div>
                    </div>
                  </div>


                <!-- edit -->
                <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
                <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
                
<script>


function validateForm() {
    let isValid = true;

    const hasSpecialCharacters = (input) => /[!@#$%^&*(),.?":{}|<>]/g.test(input);

    const productName = document.getElementById('productName').value;
    if (productName === '' || hasSpecialCharacters(productName)) {
        document.getElementById('productName-error').innerText = 'Product name is required and cannot contain special characters.';
        isValid = false;
    } else {
        document.getElementById('productName-error').innerText = '';
    }

    // Category Validation
    const productCategory = document.getElementById('productCategory').value;
    if (productCategory === '') {
        document.getElementById('productCategory-error').innerText = 'Category is required.';
        isValid = false;
    } else {
        document.getElementById('productCategory-error').innerText = '';
    }

    // Regular Price Validation
    const regularPrice = document.getElementById('regularPrice').value;
    if (regularPrice === '' || parseFloat(regularPrice) <= 0) {
        document.getElementById('regularPrice-error').innerText = 'Regular price is required and must be greater than 0.';
        isValid = false;
    } else {
        document.getElementById('regularPrice-error').innerText = '';
    }

    // Sale Price Validation
    const salePrice = document.getElementById('salePrice').value;
    if (salePrice === '' || parseFloat(salePrice) <= 0) {
        document.getElementById('salePrice-error').innerText = 'Sale price is required and must be greater than 0.';
        isValid = false;
    } else if (parseFloat(salePrice) >= parseFloat(regularPrice)) {
        document.getElementById('salePrice-error').innerText = 'Sale price must be less than regular price.';
        isValid = false;
    } else {
        document.getElementById('salePrice-error').innerText = '';
    }

    // Quantity Validation
    const quantity = document.getElementById('count').value;
    if (quantity === '' || isNaN(quantity) || parseInt(quantity) <= 0) {
        document.getElementById('quantity-error').innerText = 'Please enter a valid quantity greater than 0.';
        isValid = false;
    } else {
        document.getElementById('quantity-error').innerText = '';
    }

    // Full Description Validation
    const productDescription = document.getElementById('description').value;
    if (productDescription === '' || hasSpecialCharacters(productDescription)) {
        document.getElementById('description-error').innerText = 'Description is required and cannot contain special characters.';
        isValid = false;
    } else {
        document.getElementById('description-error').innerText = '';
    }

    // Image Validation
    // const imageInputs = document.querySelectorAll('input[type="file"]');
    // imageInputs.forEach((input, index) => {
    //     const file = input.files[0];
    //     if (file && !['image/png', 'image/jpeg', 'image/jpg'].includes(file.type)) {
    //         document.getElementById(`images${index + 1}-error`).innerText = 'Only PNG, JPEG, and JPG formats are allowed.';
    //         isValid = false;
    //     } else {
    //         document.getElementById(`images${index + 1}-error`).innerText = '';
    //     }
    // });

    return isValid;
}


</script>
                             
                
<script>
    let croppers = {};

function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();
    reader.onload = function () {
        let dataURL = reader.result;
        let image = document.getElementById('imgView' + index);
        image.src = dataURL;

        // If a cropper exists for this index, destroy it first
        if (croppers[index]) {
            croppers[index].destroy();
        }

        // Initialize Cropper.js
        croppers[index] = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            background: false,
            autoCropArea: 1,
            zoomable: true,
        });

        // Display cropping container
        document.getElementById('cropperContainer' + index).style.display = 'block';

        // Handle the save button click for cropping
        let saveButton = document.querySelector('#saveButton' + index);
        saveButton.addEventListener('click', async function () {
            let croppedCanvas = croppers[index].getCroppedCanvas();
            let croppedImage = document.getElementById('croppedImg' + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

            let timestamp = new Date().getTime();
            let fileName = `cropped-img-${timestamp}-${index}.png`;

            // Convert the cropped canvas to a Blob and replace the original file
            await croppedCanvas.toBlob(blob => {
                let imgFile = new File([blob], fileName, { type: blob.type });
                let fileList = new DataTransfer();
                fileList.items.add(imgFile);
                document.getElementById('input' + index).files = fileList.files;
            });

            // Destroy the cropper after saving
            croppers[index].destroy();
            croppers[index] = null;
        });
    };
    reader.readAsDataURL(input.files[0]);
}

function viewImage1(event) {
           document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage2(event) {
           document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage3(event) {
           document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage4(event) {
           document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
       }




       function viewImage(event, index) {
           let input = event.target;
           let reader = new FileReader();
           reader.onload = function () {
               let dataURL = reader.result;
               let image = document.getElementById('imgView' + index);
               image.src = dataURL;
               let cropper = new Cropper(image, {
                   aspectRatio: 1,
                   viewMode: 1,
                   guides: true,
                   background: false,
                   autoCropArea: 1,
                   zoomable: true
               });
               let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
               cropperContainer.style.display = 'block';
               let saveButton = document.querySelector('#saveButton' + index);
               saveButton.addEventListener('click', async function () {
                   let croppedCanvas = cropper.getCroppedCanvas();
                   let croppedImage = document.getElementById("croppedImg" + index);
                   croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                   let timestamp = new Date().getTime();
                   let fileName = `cropped-img-${timestamp}-${index}.png`;
                   await croppedCanvas.toBlob(blob => {
                       let input = document.getElementById('input' + index);
                       let imgFile = new File([blob], fileName, blob)
                       const fileList = new DataTransfer();
                       fileList.items.add(imgFile);
                       input.files = fileList.files
                   });
                   cropperContainer.style.display = 'none';
               });
           };
           reader.readAsDataURL(input.files[0]);
       }


    
   document.getElementById("imageInput").addEventListener("change", handleFileSelect);


       function handleFileSelect(event) {
        const selectedImages = [];
           const addedImagesContainer = document.getElementById("addedImagesContainer");
           addedImagesContainer.innerHTML = "";
           const files = event.target.files;
           for (let i = 0; i < files.length; i++) {
               const file = files[i];
               selectedImages.push(file);
               const thumbnail = document.createElement("div");
               thumbnail.classList.add("thumbnail");
               const img = document.createElement("img");
               img.src = URL.createObjectURL(file);
               img.alt = "thumbnail";
               img.style.width = "50px";
               img.style.height = "auto";
               const removeIcon = document.createElement("span");
               removeIcon.classList.add("remove-icon");
               removeIcon.innerHTML = "&times;";
               removeIcon.addEventListener("click", function () {
                   const index = selectedImages.indexOf(file);
                   if (index !== -1) {
                       selectedImages.splice(index, 1);
                   }
                   thumbnail.remove();
               });
               thumbnail.appendChild(img);
               thumbnail.appendChild(removeIcon);
               addedImagesContainer.appendChild(thumbnail);
           }
       };

       function deleteSingleImage(imageId,productId){
            $.ajax({
                url:"/deleteImage",
                method:"post",
                data:{imageNameToServer:imageId,productIdToServer:productId},
                success:((response)=>{
                    if(response.status===true){
                        window.location.reload()
                    }
                })
            })
        }


</script>


<script>
    function populateEditProductForm(productId) {
    $.ajax({
        url: '/admin/getProductData',  // Make sure you have a route to get the product data
        method: 'GET',
        data: { id: productId },
        success: function(product) {
            // Populate the form fields inside the modal with the product data
            $('#productName').val(product.productName);
            $('#productCategory').val(product.category._id);
            $('#regularPrice').val(product.regularPrice);
            $('#salePrice').val(product.salePrice);
            $('#description').val(product.description);
            $('#count').val(product.count);
            
            // Assuming the product has multiple images, you can dynamically show them
            // or handle image uploads in a similar manner if needed.
        },
        error: function(err) {
            console.error('Error fetching product data:', err);
            alert('Failed to load product data.');
        }
    });
}






function viewImage1(event) {
           document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage2(event) {
           document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage3(event) {
           document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
       }


       function viewImage4(event) {
           document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
       }
function deleteSingleImage(imageName, productId) {
  if (confirm('Are you sure you want to delete this image?')) {
    fetch('/admin/deleteImage', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        productId: productId,
        imageName: imageName
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Remove the image element from the DOM
        const imageElement = document.querySelector(`img[src="/uploads/re-image/${imageName}"]`);
        imageElement.closest('.card-body').remove();

        // Add a new file input for uploading a new image
        const newImageInputDiv = document.createElement('div');
        newImageInputDiv.classList.add('card-body', 'align-items-center');
        newImageInputDiv.style.marginBottom = '20px';

        // Create file input for new image
        const newImageInput = document.createElement('input');
        newImageInput.classList.add('form-control');
        newImageInput.type = 'file';
        newImageInput.name = 'images';
        newImageInput.accept = 'image/png, image/jpeg, image/jpg';

        // Append the new input element
        newImageInputDiv.appendChild(newImageInput);

        // Append the new div to the row
        document.querySelector('.row').appendChild(newImageInputDiv);

        alert(data.message);
      } else {
        alert('Failed to delete image.');
      }
    })
    .catch(error => {
      console.error('Error:', error);
    });
  }
}




       function viewImage(event, index) {
           let input = event.target;
           let reader = new FileReader();
           reader.onload = function () {
               let dataURL = reader.result;
               let image = document.getElementById('imgView' + index);
               image.src = dataURL;
               let cropper = new Cropper(image, {
                   aspectRatio: 1,
                   viewMode: 1,
                   guides: true,
                   background: false,
                   autoCropArea: 1,
                   zoomable: true
               });
               let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
               cropperContainer.style.display = 'block';
               let saveButton = document.querySelector('#saveButton' + index);
               saveButton.addEventListener('click', async function () {
                   let croppedCanvas = cropper.getCroppedCanvas();
                   let croppedImage = document.getElementById("croppedImg" + index);
                   croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                   let timestamp = new Date().getTime();
                   let fileName = `cropped-img-${timestamp}-${index}.png`;
                   await croppedCanvas.toBlob(blob => {
                       let input = document.getElementById('input' + index);
                       let imgFile = new File([blob], fileName, blob)
                       const fileList = new DataTransfer();
                       fileList.items.add(imgFile);
                       input.files = fileList.files
                   });
                   cropperContainer.style.display = 'none';
               });
           };
           reader.readAsDataURL(input.files[0]);
       }


       const selectedImages = [];
   document.getElementById("imageInput").addEventListener("change", handleFileSelect);


       function handleFileSelect(event) {
           const addedImagesContainer = document.getElementById("addedImagesContainer");
           addedImagesContainer.innerHTML = "";
           const files = event.target.files;
           for (let i = 0; i < files.length; i++) {
               const file = files[i];
               selectedImages.push(file);
               const thumbnail = document.createElement("div");
               thumbnail.classList.add("thumbnail");
               const img = document.createElement("img");
               img.src = URL.createObjectURL(file);
               img.alt = "thumbnail";
               img.style.width = "50px";
               img.style.height = "auto";
               const removeIcon = document.createElement("span");
               removeIcon.classList.add("remove-icon");
               removeIcon.innerHTML = "&times;";
               removeIcon.addEventListener("click", function () {
                   const index = selectedImages.indexOf(file);
                   if (index !== -1) {
                       selectedImages.splice(index, 1);
                   }
                   thumbnail.remove();
               });
               thumbnail.appendChild(img);
               thumbnail.appendChild(removeIcon);
               addedImagesContainer.appendChild(thumbnail);
           }
       };

</script>


 
    


     
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <!-- <script src="assets/js/vendors/jquery-3.6.0.min.js"></script> -->
     <script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
    
    <!-- <script src="assets/js/vendors/bootstrap.bundle.min.js"></script> -->
     <script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <!-- <script src="assets/js/vendors/select2.min.js"></script> -->
     <script src="/assets/js/vendors/select2.min.js"></script>
    <!-- <script src="assets/js/vendors/perfect-scrollbar.js"></script> -->
     <script src="/assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="/assets/js/vendors/chart.js"></script>
    <!-- Main Script -->
    <script src="/assets/js/main.js" type="text/javascript"></script>
    <script src="/assets/js/custom-chart.js" type="text/javascript"></script>

   
</body>
</html>